1. Describe the problem generics address.
1. Provides type safety.
2. Better performance.
3. Better flexibility.
4. Maintainability.

2. How would you create a list of strings, using the generic List class?

List<string> stringList = new List<string>();

3. How many generic type parameters does the Dictionary class have?
2 : one for the key and one for the value

4. True/False. When a generic class has multiple type parameters, they must all match. --False

5. What method is used to add items to a List object? Add()

List<string> stringList = new List<string>();
stringList.Add("One");

6. Name two methods that cause items to be removed from a List.

Remove(), RemoveAt().

7. How do you indicate that a class has a generic type parameter? 
 public class GenericClass<T>{} T--> type parameter.
 
8. True/False. Generic classes can only have one generic type parameter. -- False
9. True/False. Generic type constraints limit what can be used for the generic type. -- True
10. True/False. Constraints let you use the methods of the thing you are constraining to. -- True